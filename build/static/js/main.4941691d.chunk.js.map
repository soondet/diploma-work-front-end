{"version":3,"sources":["reducers/auth.js","reducers/message.js","reducers/index.js","actions/types.js","store.js","services/auth.service.js","components/login.component.js","actions/auth.js","components/register.component.js","services/auth-header.js","services/user.service.js","services/schedule.service.js","services/station.service.js","components/home.component.js","components/profile.component.js","components/board-user.component.js","components/board-moderator.component.js","components/board-admin.component.js","helpers/history.js","App.js","actions/message.js","serviceWorker.js","index.js"],"names":["user","JSON","parse","localStorage","getItem","initialState","isLoggedIn","combineReducers","auth","state","action","type","payload","message","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","API_URL","username","password","axios","post","then","response","data","accessToken","setItem","stringify","removeItem","email","required","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","loading","e","this","setState","target","preventDefault","form","validateAll","dispatch","history","checkBtn","context","_errors","length","AuthService","login","Promise","resolve","error","toString","reject","push","window","location","reload","catch","to","src","alt","onSubmit","ref","c","htmlFor","name","onChange","validations","disabled","style","display","Component","connect","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","register","authHeader","Authorization","get","headers","filters","console","log","cityFrom","cityTo","date","Home","DatePicker","RangePicker","content","stationCities","scheduleItems","onOkDatePicker","onChangeCityFrom","onChangeCityTo","onSearchSchedule","onChangeDatePicker","UserService","getPublicContent","StationService","getStationCities","moment","toISOString","utc","format","dateString","ScheduleService","getSchedule","showSearch","width","placeholder","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","map","index","Option","key","showTime","onOk","renderExtraFooter","onClick","pagination","page","pageSize","size","bordered","dataSource","renderItem","item","Item","id","city","stationName","stateNumber","busModel","seatNumber","seatPriceStandard","seatPriceSleep","seatPriceLying","cityId","seatCountStandard","seatCountSleep","seatCountLying","Profile","currentUser","substring","substr","roles","BoardUser","getUserBoard","BoardModerator","getModeratorBoard","BoardAdmin","getAdminBoard","createBrowserHistory","App","logOut","showModeratorBoard","showAdminBoard","undefined","listen","includes","logout","href","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4941691d.chunk.js","sourcesContent":["import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from \"../actions/types\";\n\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\nconst initialState = user\n  ? { isLoggedIn: true, user }\n  : { isLoggedIn: false, user: null };\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    case REGISTER_FAIL:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: true,\n        user: payload.user,\n      };\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_MESSAGE:\n      return { message: payload };\n\n    case CLEAR_MESSAGE:\n      return { message: \"\" };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport auth from \"./auth\";\nimport message from \"./message\";\n\nexport default combineReducers({\n  auth,\n  message,\n});\n","export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\n\nexport const SET_MESSAGE = \"SET_MESSAGE\";\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import axios from \"axios\";\n\nconst API_URL = \"http://195.2.67.225:8080/api/auth/\";\n\nclass AuthService {\n  login(username, password) {\n    return axios\n      .post(API_URL + \"signin\", { username, password })\n      .then((response) => {\n        if (response.data.accessToken) {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(username, email, password) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password,\n    });\n  }\n}\n\nexport default new AuthService();\n","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\n\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport { connect } from \"react-redux\";\nimport { login } from \"../actions/auth\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false,\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value,\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n\n    this.setState({\n      loading: true,\n    });\n\n    this.form.validateAll();\n\n    const { dispatch, history } = this.props;\n\n    if (this.checkBtn.context._errors.length === 0) {\n      dispatch(login(this.state.username, this.state.password))\n        .then(() => {\n          history.push(\"/profile\");\n          window.location.reload();\n        })\n        .catch(() => {\n          this.setState({\n            loading: false\n          });\n        });\n    } else {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { isLoggedIn, message } = this.props;\n\n    if (isLoggedIn) {\n      return <Redirect to=\"/profile\" />;\n    }\n\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleLogin}\n            ref={(c) => {\n              this.form = c;\n            }}\n          >\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <Input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.onChangeUsername}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <button\n                className=\"btn btn-primary btn-block\"\n                disabled={this.state.loading}\n              >\n                {this.state.loading && (\n                  <span className=\"spinner-border spinner-border-sm\"></span>\n                )}\n                <span>Login</span>\n              </button>\n            </div>\n\n            {message && (\n              <div className=\"form-group\">\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={(c) => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { isLoggedIn } = state.auth;\n  const { message } = state.message;\n  return {\n    isLoggedIn,\n    message\n  };\n}\n\nexport default connect(mapStateToProps)(Login);\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  SET_MESSAGE,\n} from \"./types\";\n\nimport AuthService from \"../services/auth.service\";\n\nexport const register = (username, email, password) => (dispatch) => {\n  return AuthService.register(username, email, password).then(\n    (response) => {\n      dispatch({\n        type: REGISTER_SUCCESS,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: response.data.message,\n      });\n\n      return Promise.resolve();\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch({\n        type: REGISTER_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const login = (username, password) => (dispatch) => {\n  return AuthService.login(username, password).then(\n    (data) => {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: { user: data },\n      });\n\n      return Promise.resolve();\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const logout = () => (dispatch) => {\n  AuthService.logout();\n\n  dispatch({\n    type: LOGOUT,\n  });\n};\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport { connect } from \"react-redux\";\nimport { register } from \"../actions/auth\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst email = (value) => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vusername = (value) => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = (value) => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      successful: false,\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value,\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value,\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      successful: false,\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      this.props\n        .dispatch(\n          register(this.state.username, this.state.email, this.state.password)\n        )\n        .then(() => {\n          this.setState({\n            successful: true,\n          });\n        })\n        .catch(() => {\n          this.setState({\n            successful: false,\n          });\n        });\n    }\n  }\n\n  render() {\n    const { message } = this.props;\n\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleRegister}\n            ref={(c) => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Username</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChangeUsername}\n                    validations={[required, vusername]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChangeEmail}\n                    validations={[required, email]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <Input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChangePassword}\n                    validations={[required, vpassword]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                </div>\n              </div>\n            )}\n\n            {message && (\n              <div className=\"form-group\">\n                <div className={ this.state.successful ? \"alert alert-success\" : \"alert alert-danger\" } role=\"alert\">\n                  {message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={(c) => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { message } = state.message;\n  return {\n    message,\n  };\n}\n\nexport default connect(mapStateToProps)(Register);\n","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  if (user && user.accessToken) {\n    // For Spring Boot back-end\n    return { Authorization: \"Bearer \" + user.accessToken };\n\n    // for Node.js Express back-end\n    // return { \"x-access-token\": user.accessToken };\n  } else {\n    return {};\n  }\n}\n","import axios from \"axios\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = \"http://195.2.67.225:8080/api/test/\";\n\nclass UserService {\n  getPublicContent() {\n    return axios.get(API_URL + \"all\");\n  }\n\n  getUserBoard() {\n    return axios.get(API_URL + \"user\", { headers: authHeader() });\n  }\n\n  getModeratorBoard() {\n    return axios.get(API_URL + \"mod\", { headers: authHeader() });\n  }\n\n  getAdminBoard() {\n    return axios.get(API_URL + \"admin\", { headers: authHeader() });\n  }\n}\n\nexport default new UserService();\n","import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nconst API_URL = \"http://195.2.67.225:8080/api/schedule/\";\r\n\r\nclass ScheduleService {\r\n  getSchedule(filters) {\r\n    console.log(filters);\r\n    return axios.post(API_URL + \"get\", {\r\n      cityFrom: filters.cityFrom,\r\n      cityTo: filters.cityTo,\r\n      date: filters.date,\r\n    });\r\n  }\r\n}\r\n\r\nexport default new ScheduleService();\r\n","import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nconst API_URL = \"http://195.2.67.225:8080/api/station/\";\r\n\r\nclass StationService {\r\n  getStationCities() {\r\n    return axios.get(API_URL + \"cities\");\r\n  }\r\n  \r\n}\r\n\r\nexport default new StationService();\r\n","import React, { Component } from \"react\";\nimport { DatePicker, Select, Button, List, Col, message } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport moment from \"moment\";\n\nimport UserService from \"../services/user.service\";\nimport ScheduleService from \"../services/schedule.service\";\nimport StationService from \"../services/station.service\";\n\nconst { RangePicker } = DatePicker;\n// const { Option } = Select;\n\n//moment().format(\"YYYY-MM-DD[T]HH:mm:ss\"),\n//  moment().startOf(\"month\").utc(6).startOf(\"day\"),\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: \"\",\n      stationCities: [],\n      filters: {},\n      date: \"\",\n      cityFrom: \"\",\n      cityTo: \"\",\n      scheduleItems: [],\n    };\n    this.onOkDatePicker = this.onOkDatePicker.bind(this);\n    this.onChangeCityFrom = this.onChangeCityFrom.bind(this);\n    this.onChangeCityTo = this.onChangeCityTo.bind(this);\n    this.onSearchSchedule = this.onSearchSchedule.bind(this);\n    this.onChangeDatePicker = this.onChangeDatePicker.bind(this);\n  }\n\n  componentDidMount() {\n    UserService.getPublicContent().then(\n      (response) => {\n        this.setState({\n          content: response.data,\n        });\n      },\n      (error) => {\n        this.setState({\n          content:\n            (error.response && error.response.data) ||\n            error.message ||\n            error.toString(),\n        });\n      }\n    );\n\n    StationService.getStationCities().then(\n      (response) => {\n        this.setState({\n          stationCities: response.data,\n        });\n      },\n      (error) => {\n        this.setState({\n          content:\n            (error.response && error.response.data) ||\n            error.message ||\n            error.toString(),\n        });\n      }\n    );\n  }\n\n  onOkDatePicker(value) {\n    console.log(value);\n    this.setState({\n      filters: {\n        ...this.state.filters,\n        date: moment(value.toISOString())\n          .utc(6)\n          .format(\"YYYY-MM-DD[T]HH:mm:ss\"),\n      },\n    });\n  }\n  onChangeDatePicker(value, dateString) {\n    this.setState({\n      filters: {\n        ...this.state.filters,\n        date: value,\n      },\n    });\n  }\n\n  onChangeCityFrom(value) {\n    this.setState({\n      filters: { ...this.state.filters, cityFrom: value },\n    });\n  }\n\n  onChangeCityTo(value) {\n    this.setState({\n      filters: { ...this.state.filters, cityTo: value },\n    });\n  }\n\n  onSearchSchedule() {\n    const { filters } = this.state;\n    ScheduleService.getSchedule(filters).then(\n      (response) => {\n        this.setState({\n          scheduleItems: response.data,\n        });\n      },\n      (error) => {\n        message.error(\"Please fill everything\");\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n          <Col>\n            <Select\n              showSearch\n              style={{ width: 200 }}\n              placeholder=\"Select a person\"\n              optionFilterProp=\"children\"\n              onChange={this.onChangeCityFrom}\n              filterOption={(input, option) =>\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n              }\n            >\n              {this.state.stationCities.map((e, index) => (\n                <Select.Option key={index} value={e}>\n                  {e}\n                </Select.Option>\n              ))}\n            </Select>\n            <Select\n              showSearch\n              style={{ width: 200 }}\n              placeholder=\"Select a person\"\n              optionFilterProp=\"children\"\n              onChange={this.onChangeCityTo}\n              filterOption={(input, option) =>\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n              }\n            >\n              {this.state.stationCities.map((e, index) => (\n                <Select.Option key={index} value={e}>\n                  {e}\n                </Select.Option>\n              ))}\n            </Select>\n\n            <DatePicker\n              onChange={this.onChangeDatePicker}\n              showTime\n              // onChange={this.onChange}\n              format=\"YYYY-MM-DDTHH:mm\"\n              onOk={this.onOkDatePicker}\n              renderExtraFooter={() => <h5>Please press OK after choosing</h5>}\n            />\n            <Button type=\"primary\" onClick={this.onSearchSchedule}>\n              Click me!\n            </Button>\n          </Col>\n          <Col>\n            <List\n              pagination={{\n                onChange: (page) => {\n                  console.log(page);\n                },\n                pageSize: 3,\n              }}\n              size=\"large\"\n              bordered\n              dataSource={this.state.scheduleItems}\n              renderItem={(item) => (\n                <List.Item>\n                  {item.id}+,\n                  {item.city}+,\n                  {item.stationName}+,\n                  {item.stateNumber}+,\n                  {item.busModel}+,\n                  {item.seatNumber}+,\n                  {item.seatPriceStandard}+,\n                  {item.seatPriceSleep}+,\n                  {item.seatPriceLying}+,\n                  {item.cityId}+,\n                  {item.cityFrom}+,\n                  {item.cityTo}+,\n                  {item.date}+,\n                  {item.seatCountStandard}+,\n                  {item.seatCountSleep}+,\n                  {item.seatCountLying}\n                </List.Item>\n              )}\n            />\n          </Col>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\n\nclass Profile extends Component {\n\n  render() {\n    const { user: currentUser } = this.props;\n\n    if (!currentUser) {\n      return <Redirect to=\"/login\" />;\n    }\n\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>\n            <strong>{currentUser.username}</strong> Profile\n          </h3>\n        </header>\n        <p>\n          <strong>Token:</strong> {currentUser.accessToken.substring(0, 20)} ...{\" \"}\n          {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\n        </p>\n        <p>\n          <strong>Id:</strong> {currentUser.id}\n        </p>\n        <p>\n          <strong>Email:</strong> {currentUser.email}\n        </p>\n        <strong>Authorities:</strong>\n        <ul>\n          {currentUser.roles &&\n            currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\n        </ul>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { user } = state.auth;\n  return {\n    user,\n  };\n}\n\nexport default connect(mapStateToProps)(Profile);\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getUserBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardModerator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getModeratorBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardAdmin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getAdminBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport Login from \"./components/login.component\";\nimport Register from \"./components/register.component\";\nimport Home from \"./components/home.component\";\nimport Profile from \"./components/profile.component\";\nimport BoardUser from \"./components/board-user.component\";\nimport BoardModerator from \"./components/board-moderator.component\";\nimport BoardAdmin from \"./components/board-admin.component\";\n\nimport { logout } from \"./actions/auth\";\nimport { clearMessage } from \"./actions/message\";\n\nimport { history } from './helpers/history';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      showModeratorBoard: false,\n      showAdminBoard: false,\n      currentUser: undefined,\n    };\n\n    history.listen((location) => {\n      props.dispatch(clearMessage()); // clear message when changing location\n    });\n  }\n\n  componentDidMount() {\n    const user = this.props.user;\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n        showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\n      });\n    }\n  }\n\n  logOut() {\n    this.props.dispatch(logout());\n  }\n\n  render() {\n    const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\n\n    return (\n      <Router history={history}>\n        <div>\n          <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n            <Link to={\"/\"} className=\"navbar-brand\">\n              BusSystem\n            </Link>\n            <div className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/home\"} className=\"nav-link\">\n                  Home\n                </Link>\n              </li>\n\n              {showModeratorBoard && (\n                <li className=\"nav-item\">\n                  <Link to={\"/mod\"} className=\"nav-link\">\n                    Moderator Board\n                  </Link>\n                </li>\n              )}\n\n              {showAdminBoard && (\n                <li className=\"nav-item\">\n                  <Link to={\"/admin\"} className=\"nav-link\">\n                    Admin Board\n                  </Link>\n                </li>\n              )}\n\n              {currentUser && (\n                <li className=\"nav-item\">\n                  <Link to={\"/user\"} className=\"nav-link\">\n                    User\n                  </Link>\n                </li>\n              )}\n            </div>\n\n            {currentUser ? (\n              <div className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  <Link to={\"/profile\"} className=\"nav-link\">\n                    {currentUser.username}\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\n                    Log Out\n                  </a>\n                </li>\n              </div>\n            ) : (\n              <div className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  <Link to={\"/login\"} className=\"nav-link\">\n                    Login\n                  </Link>\n                </li>\n\n                <li className=\"nav-item\">\n                  <Link to={\"/register\"} className=\"nav-link\">\n                    Sign Up\n                  </Link>\n                </li>\n              </div>\n            )}\n          </nav>\n\n          <div className=\"container mt-3\">\n            <Switch>\n              <Route exact path={[\"/\", \"/home\"]} component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/register\" component={Register} />\n              <Route exact path=\"/profile\" component={Profile} />\n              <Route path=\"/user\" component={BoardUser} />\n              <Route path=\"/mod\" component={BoardModerator} />\n              <Route path=\"/admin\" component={BoardAdmin} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { user } = state.auth;\n  return {\n    user,\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"./types\";\n\nexport const setMessage = (message) => ({\n  type: SET_MESSAGE,\n  payload: message,\n});\n\nexport const clearMessage = () => ({\n  type: CLEAR_MESSAGE,\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can chađinge\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}